{
    "name": "ldogfunc",
    "label": "ldogFunc: functional pre-processing for the LDOG project",
    "description": "This gear performs preprocessing of the functional scans for the LDOG project.",
    "version": "0.4.3",
    "inputs": {
        "StructZip": {
            "base": "file",
            "description": "Output of ldogStruct gear",
            "optional": true,
            "type": {
                "enum": [
                    "archive"
                ]
            }
        },
        "compositeTransform": {
            "base": "file",
            "description": "If supplied, use this file to transform fmri images instead of ldogstruct output.",
            "optional": true
        },
        "fMRIScoutAP": {
            "base": "file",
            "description": "Scout EPI with AP encoding direction",
            "optional": true,
            "type": {
                "enum": [
                    "nifti"
                ]
            }
        },
        "fMRIScoutPA": {
            "base": "file",
            "description": "Scout EPI with PA encoding direction",
            "optional": true,
            "type": {
                "enum": [
                    "nifti"
                ]
            }
        },
        "fMRITimeSeries": {
            "base": "file",
            "description": "fMRI Time Series images",
            "optional": false,
            "type": {
                "enum": [
                    "nifti"
                ]
            }
        },
        "interpolationTarget": {
            "base": "file",
            "description": "Target for the fmri interpolation. Use this if you passed a custom template to ldogstruct",
            "optional": true,
            "type": {
                "enum": [
                    "nifti"
                ]
            }
        },
        "sliceOrderFile": {
            "base": "file",
            "description": "Slice order file. If supplied, do a slice timing correction. It is a text file which contains a single column of values. The first value is the number of the slice which was acquired first, the second value is the slice which was acquired second, and so on.",
            "optional": true
        }
    },
    "config": {
        "fMRIName": {
            "default": "NA",
            "description": "Output name for preprocessed data",
            "type": "string"
        },
        "saveIntermediateFiles": {
            "default": false,
            "description": "saves intermediate files created during the analysis",
            "type": "boolean"
        },
        "scoutRegistration": {
            "default": true,
            "description": "Do an initial rigid registration to the scout image. If both AP and PA scouts are passed, the target is the topuped scout image",
            "type": "boolean"
        },
        "totalReadoutTimeAP": {
            "default": 0.0217349,
            "description": "total readout time of the single-rep recon api in AP direction. Required for topup. Can be found in nifti header",
            "type": "number"
        },
        "totalReadoutTimePA": {
            "default": 0.0217349,
            "description": "total readout time of the single-rep recon api in PA direction. Required for topup. Can be found in nifti header",
            "type": "number"
        },
        "useTheFirstTRforRegistration": {
            "default": false,
            "description": "Use the first tr instead of mean image for the first level registration",
            "type": "boolean"
        }
    },
    "author": "Ozenc Taskin",
    "maintainer": "Ozenc Taskin",
    "license": "Other",
    "source": "https://github.com/gkaguirrelab/mriLDOGAnalysis/fw_gears",
    "url": "https://github.com/gkaguirrelab/mriLDOGAnalysis",
    "custom": {
        "flywheel": {
            "suite": "GKAguirreLab"
        },
        "gear-builder": {
            "category": "analysis",
            "image": "gkaguirrelab/ldogfunc:0.4.3"
        }
    }
}