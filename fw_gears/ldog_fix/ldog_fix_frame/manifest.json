{
	"name": "ldogfix",
	"label": "ldogFix: archiving ldogfunc outputs",
	"description": "This gear packages multiple ldogfunc outputs into one archive, regresses out motion confounds and does smoothing(optional)",
	"author": "Ozenc Taskin",
	"maintainer": "Ozenc Taskin <huseyinozenc.taskin@pennmedicine.upenn.edu>",
	"source": "https://github.com/gkaguirrelab/mriLDOGAnalysis/fw_gears",
	"url": "https://github.com/gkaguirrelab/mriLDOGAnalysis",
	"version": "0.1.4",
	"custom": {
		"flywheel": {
			"suite": "GKAguirreLab"
		},
		"docker-image": ""
	},
	"license": "Other",
	"config": {
		"smoothingSigma": {
			"default": "NA",
			"description": "Gaussian sigma in mm. To calculate sigma from FWHM, divide your FWHM (in mm) by 2.3548. Default: NA means no smoothing",
			"type": "string"
		},
		"archiveName": {
			"default": "archive",
			"description": "Archive Name to append to the output name",
			"type": "string"
		},
		"convertToPercentChangeSignal": {
			"default": "false",
			"description": "Converts signal to percentage change",
			"type": "string"
		},
		"makePseudoHemisphere": {
			"default": "false",
			"description": "Save final images as pseudohemispheres by flipping and averaging",
			"type": "string"
		},
		"makePseudoHemisphere": {
			"default": "false",
			"description": "Save final images as pseudohemispheres by flipping and averaging",
			"type": "string"
		},	
		"flipOutput": {
			"default": "false",
			"description": "This option saves the output in flipped hemisphere. Warning: This is not a pseudo hemisphere averaging. Set the makePseudoHemisphere flag for that operation. Setting this true will also overrule pseudo hemi averaging.",
			"type": "string"
		},	
		"regressGlobalSignal": {
			"default": "false",
			"description": "Regress globab signal from the  data",
			"type": "string"
		},
		"voxelMADthresh": {
			"default": "6",
			"description": "For the spike detection, first an outlier detection is performed on all voxels and number of outliers are counted. This threshold decides how many MADs a voxel should be above the mean to be counted as an outlier",
			"type": "string"
		},
		"meanMADthresh": {
			"default": "25",
			"description": "2nd part of spike detection is performed on the mean voxel image. This threshold decides how many MAD a TR should be above a threshold to be considered as an outlier.",
			"type": "string"
		},
		"lowPassFilter": {
			"default": "NA",
			"description": "Low pass filter frequency. This value is converted to sigma with 1/(18*f*TR). If a highpass filter is specified, a bandpass filter is used to retain the range.",
			"type": "string"
		},
		"highPassFilter": {
			"default": "NA",
			"description": "High pass filter frequency. This value is converted to sigma with 1/(2*f*TR). If a highpass filter is specified, a bandpass filter is used to retain the range.",
			"type": "string"
		}				
	},
	"inputs": {
		"stimFile": {
			"base": "file",
			"description": "Stimulus File",
			"optional": true,
			"type": {
				"enum": [
					"MATLAB archive"
				]
			}
		},	
		"EPI_01": {
			"description": "EPI archive",
			"base": "file",
			"optional": false,
			"type": {
				"enum": [
					"archive"
				]
			}
		},
		"EPI_02": {
			"description": "EPI archive",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"archive"
				]
			}
		},
		"EPI_03": {
			"description": "EPI archive",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"archive"
				]
			}
		},
		"EPI_04": {
			"description": "EPI archive",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"archive"
				]
			}
		},
		"EPI_05": {
			"description": "EPI archive",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"archive"
				]
			}
		},
		"EPI_06": {
			"description": "EPI archive",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"archive"
				]
			}
		},
		"EPI_07": {
			"description": "EPI archive",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"archive"
				]
			}
		},
		"EPI_08": {
			"description": "EPI archive",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"archive"
				]
			}
		},
		"EPI_09": {
			"description": "EPI archive",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"archive"
				]
			}
		},
		"EPI_10": {
			"description": "EPI archive",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"archive"
				]
			}
		},
		"EPI_11": {
			"description": "EPI archive",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"archive"
				]
			}
		},
		"EPI_12": {
			"description": "EPI archive",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"archive"
				]
			}
		},
		"EPI_13": {
			"description": "EPI archive",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"archive"
				]
			}
		},
		"EPI_14": {
			"description": "EPI archive",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"archive"
				]
			}
		},
		"EPI_15": {
			"description": "EPI archive",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"archive"
				]
			}
		},
		"EPI_16": {
			"description": "EPI archive",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"archive"
				]
			}
		},
		"EPI_17": {
			"description": "EPI archive",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"archive"
				]
			}
		},
		"EPI_18": {
			"description": "EPI archive",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"archive"
				]
			}
		},
		"EPI_19": {
			"description": "EPI archive",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"archive"
				]
			}
		},
		"EPI_20": {
			"description": "EPI archive",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"archive"
				]
			}
		},
		"raw_EPI_01": {
			"description": "Raw EPI for spike detection",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"nifti"
				]
			}
		},
		"raw_EPI_02": {
			"description": "Raw EPI for spike detection",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"nifti"
				]
			}
		},
		"raw_EPI_03": {
			"description": "Raw EPI for spike detection",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"nifti"
				]
			}
		},
		"raw_EPI_04": {
			"description": "Raw EPI for spike detection",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"nifti"
				]
			}
		},
		"raw_EPI_05": {
			"description": "Raw EPI for spike detection",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"nifti"
				]
			}
		},
		"raw_EPI_06": {
			"description": "Raw EPI for spike detection",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"nifti"
				]
			}
		},
		"raw_EPI_07": {
			"description": "Raw EPI for spike detection",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"nifti"
				]
			}
		},
		"raw_EPI_08": {
			"description": "Raw EPI for spike detection",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"nifti"
				]
			}
		},
		"raw_EPI_09": {
			"description": "Raw EPI for spike detection",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"nifti"
				]
			}
		},
		"raw_EPI_10": {
			"description": "Raw EPI for spike detection",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"nifti"
				]
			}
		},
		"raw_EPI_11": {
			"description": "Raw EPI for spike detection",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"nifti"
				]
			}
		},
		"raw_EPI_12": {
			"description": "Raw EPI for spike detection",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"nifti"
				]
			}
		},
		"raw_EPI_13": {
			"description": "Raw EPI for spike detection",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"nifti"
				]
			}
		},
		"raw_EPI_14": {
			"description": "Raw EPI for spike detection",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"nifti"
				]
			}
		},
		"raw_EPI_15": {
			"description": "Raw EPI for spike detection",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"nifti"
				]
			}
		},
		"raw_EPI_16": {
			"description": "Raw EPI for spike detection",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"nifti"
				]
			}
		},
		"raw_EPI_17": {
			"description": "Raw EPI for spike detection",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"nifti"
				]
			}
		},
		"raw_EPI_18": {
			"description": "Raw EPI for spike detection",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"nifti"
				]
			}
		},
		"raw_EPI_19": {
			"description": "Raw EPI for spike detection",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"nifti"
				]
			}
		},
		"raw_EPI_20": {
			"description": "Raw EPI for spike detection",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"nifti"
				]
			}
		}
	}
}
