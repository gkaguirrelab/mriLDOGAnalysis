#!/usr/bin/python3

import os 
import json
###################### Define the Paths and parameters ###########################

# Set paths and create some folders
flywheel_base ='/flywheel/v0/'
first_output_dir = '/firstOutput'
mcr_path = '/usr/local/MATLAB/MATLAB_Runtime/v97/'
compiled_matlab_func = '/opt/regressMotion/run_regressMotion.sh'
final_output_dir = os.path.join(flywheel_base, 'output')
manifest_file = os.path.join(flywheel_base, 'manifest.json')
config_path = os.path.join(flywheel_base, 'config.json')
os.system('mkdir %s'%first_output_dir)

################### Parse config ##############################################

with open(config_path) as config_file:
    job_config = json.load(config_file)
config = job_config['config']

smoothingSigma = config['smoothingSigma']
archiveName = config['archiveName']

################### Run Algorithm ################################

num_img = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', 
           '12', '13', '14', '15', '16', '17', '18', '19', '20']

for i in num_img:   
    key_name = 'EPI_' + i
    folder_name = os.path.join(flywheel_base, 'input/%s' % key_name)
    if os.path.exists(folder_name):
        zip_name = os.listdir(folder_name)[0]    
        zip_file = os.path.join(folder_name, zip_name)
        subj_sess_name = zip_name[:-21]
        os.system('unzip -q %s -d %s/files/' % (zip_file, folder_name))
        new_folder_path = os.path.join(first_output_dir, key_name)
        os.system('mkdir %s' % new_folder_path)
        for file in os.listdir(os.path.join(folder_name, 'files')):
            if file[-3:] == 'txt':
                motion_params = os.path.join(folder_name, 'files', file)
            if file[-3:] == '.gz':
                image_file = os.path.join(folder_name, 'files', file)
        cmd = '%s %s %s %s %s' % (compiled_matlab_func, mcr_path, image_file, motion_params, new_folder_path)        
        os.system(cmd)
        
        if smoothingSigma != 'NA':
            new_corrected_file = os.path.join(new_folder_path, os.listdir(new_folder_path)[0])
            os.system('FSLDIR=/usr/lib/fsl/5.0;. /etc/fsl/5.0/fsl.sh;PATH=${FSLDIR}:${PATH};export FSLDIR PATH;/usr/lib/fsl/5.0/fslmaths %s -kernel gauss %s -fmean %s' % (new_corrected_file, float(smoothingSigma), new_corrected_file))
            newname = new_corrected_file.replace('preprocessedMoReg','preprocessedMoRegSmooth')
            os.system('mv %s %s' % (new_corrected_file, newname))
            
################## Zip everything and output ##################################

# Zip and move the maps
print(os.listdir(first_output_dir))
os.system('cd %s; zip -q -r %s/%s *' % (first_output_dir, final_output_dir, archiveName))
