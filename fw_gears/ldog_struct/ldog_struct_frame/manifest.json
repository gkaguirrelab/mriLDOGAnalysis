{
	"name": "ldogstruct",
	"label": "ldogStruct: anatomical pre-processing for the LDOG project",
	"description": "This gear performs preprocessing for the LDOG project.",
	"author": "Ozenc Taskin",
	"maintainer": "Ozenc Taskin <huseyinozenc.taskin@pennmedicine.upenn.edu>",
	"source": "https://github.com/gkaguirrelab/mriLDOGAnalysis/fw_gears",
	"url": "https://github.com/gkaguirrelab/mriLDOGAnalysis",
	"version": "0.1.6",
	"custom": {
		"flywheel": {
			"suite": "GKAguirreLab"
		},
		"docker-image": ""
	},
	"license": "Other",
	"config": {
		"centreOfGravityX":  {
  			"description": "x position of the center voxel. If two structurals are averaged, obtain the coordinates from the first structural input (MPRAGE_01). To derive the required coordinate form from the Flywheel viewer, user can first pick an approximate middle voxel on the coronal-axial-sagital slices using the viewer and substract the selected voxel coordinates from the total amount of voxels in each of these slice directions and finally reorganize these values in a way that centre_x will be saggital, centre_y will be axial, and centre_z will be coronal",
  			"type": "number"
		},
		"centreOfGravityY":  {
  			"description": "y position of the center voxel. If two structurals are averaged, obtain the coordinates from the first structural input (MPRAGE_01)",
  			"type": "number"
		},
		"centreOfGravityZ":  {
  			"description": "z position of the center voxel. If two structurals are averaged, obtain the coordinates from the first structural input (MPRAGE_01)",
  			"type": "number"
		},
		"subjectId":  {
  			"description": "Subject ID",
  			"type": "string"
		},
		"extractionThreshold":  {
			"default":0.2,
  			"description": "Functional intensity threshold (BET).",
  			"type": "number"
		},
		"numberOfThreads": {
			"default":2,
			"description": "Number of threads to use for registrations",
			"type": "number"
		},
		"structToStructTransform": {
			"default":"SyN",
			"description": "This is the transformation type to use for registering MPRAGE images together before averaging. If a single image is used as input, this config option will not be obtained by the gear as no registration will take place. SyN deformation is used as the default method, but rigid and affine transformations are also available for registering within subject structurals ",
			"type": "string",
			"enum": [
				"SyN",
				"Rigid",
				"Affine"
			]
		},
		"transformationMethod": {
			"default":"skullStrippedMprage-skullStrippedTemplate",
			"description": "This specifies the image types used for mprage-template warps.",
			"type": "string",
			"enum": [
				"skullStrippedMprage-skullStrippedTemplate",
				"wholeMprage-skullStrippedTemplate",
				"wholeMprage-wholeTemplate"
			]
		}
	},
	"inputs": {
		"MPRAGE_01": {
			"description": "MPRAGE image",
			"base": "file",
			"optional": false,
			"type": {
				"enum": [
					"nifti"
				]
			}
		},
		"MPRAGE_02": {
			"description": "MPRAGE image",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"nifti"
				]
			}
		},
		"MPRAGE_03": {
			"description": "MPRAGE image",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"nifti"
				]
			}
		},
		"MPRAGE_04": {
			"description": "MPRAGE image",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"nifti"
				]
			}
		},
		"MPRAGE_05": {
			"description": "MPRAGE image",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"nifti"
				]
			}
		},
		"Template": {
			"description": "Template image to use for warping. This is optional. If left empty, the gear uses the invivoTemplate",
			"base": "file",
			"optional": true,
			"type": {
				"enum": [
					"nifti"
				]
			}
		}
	}
}
